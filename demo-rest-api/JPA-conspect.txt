Persistence - постоянство
В БД, используются реляционные связи, но это не совсем применимо к джава миру
В Джава мире мы испоьзуем взаимодействие объектов
Основная задача ORM (Object-Relational Mapping) - это соединение принципов джавы с принипами реляционных БД,
с помощью какого нибудь фреймворка,
типа hibernate или JPA
С помощью этих фреймворков мы можем управлять состоянием БД через объекты

==============================================================================================================================

Объектно-реляционное отображение ORM

Принцип ORM заключается в возложении на внешние инструменты, задачи по обеспечению соответствиея между объектами и таблицами

JPA отображает объекты в базе данных, с помощью метаданных

Здесь работает правило, что если не указано иное, то работает конфигурация по умолчанию.
например если аннотацией @Table, не указано иное имя, то сущность Book, по умолчанию преобразуется в BOOK
 - Если необходимо изменить название колонки по умолчанию, то используется аннотация @Column

 String -> VARCHAR, по умолчанию 255
 Long -> BIGINT
 boolean -> SMALLINT

Значения типов данных по умолчанию, зависят от БД

!!! JPA позволяет работать только с реляционными БД


===============================================================================================================================

Выполнение запросов к сущностям

Центральным элементом API-интерфейса является EntityManager

Например реализцая интерфейса EntityManager, включает в себя следующие методы
objName.persist(book) // скрывает jdbc реализацию, оператора INSERT
objName.find(id); // скрывает jdbc реализацию оператора SELECT

Пример запроса JPQL
SELECT b from BOOK b where b.title = 'H2G2'

JPQL операторы манипулируют объектами и атрибутами, а не таблицами и столбцами
JPQL позволяет манипулировать запросами как статическими, так и динамически генерируемыми

Алгоритм примерно следующий,
Класс - образается к менеджер сущностей, к примеру, найти объект - менеджер сущности с помощью метода  find образается к сущности - далее преобразует метод
в селект и обращается к БД - получает объект - возвращает объект классу

Статические запросы, реализуются с помощью аннотаций
@NamedQuery(name = 'findBookH@2G2'
            query = "SELECT b from BOOK b where b.title = 'H2G2'")

Транзакция состояит как минимум из 3 этапов:
1. begin
2. Какое либо действие, например persist()
3. commit

Также, о завершении необходио закрыть EntityManager и EntityManagerFactory

